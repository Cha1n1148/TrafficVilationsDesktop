//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrafficVilationsDesktop.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TrafficViolationsEntities : DbContext
    {
        public TrafficViolationsEntities()
            : base("name=TrafficViolationsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Driver_License_Category> Driver_License_Category { get; set; }
        public virtual DbSet<Driver_Licenses> Driver_Licenses { get; set; }
        public virtual DbSet<Driver> Drivers { get; set; }
        public virtual DbSet<Payment_Status> Payment_Status { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<Vehicle> Vehicles { get; set; }
        public virtual DbSet<Violation_Types> Violation_Types { get; set; }
        public virtual DbSet<Violation> Violations { get; set; }
        public virtual DbSet<DetailedViolationsInfo> DetailedViolationsInfoes { get; set; }
        public virtual DbSet<ViolationStatistic> ViolationStatistics { get; set; }
    
        [DbFunction("TrafficViolationsEntities", "GetLicensesByDriver")]
        public virtual IQueryable<GetLicensesByDriver_Result> GetLicensesByDriver(Nullable<int> deiver_id)
        {
            var deiver_idParameter = deiver_id.HasValue ?
                new ObjectParameter("deiver_id", deiver_id) :
                new ObjectParameter("deiver_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetLicensesByDriver_Result>("[TrafficViolationsEntities].[GetLicensesByDriver](@deiver_id)", deiver_idParameter);
        }
    
        [DbFunction("TrafficViolationsEntities", "GetVehiclesByDriver")]
        public virtual IQueryable<GetVehiclesByDriver_Result> GetVehiclesByDriver(Nullable<int> deiver_id)
        {
            var deiver_idParameter = deiver_id.HasValue ?
                new ObjectParameter("deiver_id", deiver_id) :
                new ObjectParameter("deiver_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetVehiclesByDriver_Result>("[TrafficViolationsEntities].[GetVehiclesByDriver](@deiver_id)", deiver_idParameter);
        }
    
        [DbFunction("TrafficViolationsEntities", "GetViolationsByDriver")]
        public virtual IQueryable<GetViolationsByDriver_Result> GetViolationsByDriver(Nullable<int> deiver_id)
        {
            var deiver_idParameter = deiver_id.HasValue ?
                new ObjectParameter("deiver_id", deiver_id) :
                new ObjectParameter("deiver_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetViolationsByDriver_Result>("[TrafficViolationsEntities].[GetViolationsByDriver](@deiver_id)", deiver_idParameter);
        }
    
        [DbFunction("TrafficViolationsEntities", "GetViolationsByType")]
        public virtual IQueryable<GetViolationsByType_Result> GetViolationsByType(Nullable<int> violation_id)
        {
            var violation_idParameter = violation_id.HasValue ?
                new ObjectParameter("violation_id", violation_id) :
                new ObjectParameter("violation_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetViolationsByType_Result>("[TrafficViolationsEntities].[GetViolationsByType](@violation_id)", violation_idParameter);
        }
    
        [DbFunction("TrafficViolationsEntities", "GetViolationsByVehicle")]
        public virtual IQueryable<GetViolationsByVehicle_Result> GetViolationsByVehicle(Nullable<int> vehicle_id)
        {
            var vehicle_idParameter = vehicle_id.HasValue ?
                new ObjectParameter("vehicle_id", vehicle_id) :
                new ObjectParameter("vehicle_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetViolationsByVehicle_Result>("[TrafficViolationsEntities].[GetViolationsByVehicle](@vehicle_id)", vehicle_idParameter);
        }
    
        public virtual int AddDriver(string first_name, string last_name, string middle_name, Nullable<System.DateTime> birthdate, string phone, string address, ObjectParameter error_message)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("birthdate", birthdate) :
                new ObjectParameter("birthdate", typeof(System.DateTime));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDriver", first_nameParameter, last_nameParameter, middle_nameParameter, birthdateParameter, phoneParameter, addressParameter, error_message);
        }
    
        public virtual int AddDriverLicense(string licenseNumber, Nullable<int> driver_id, string category_id, Nullable<System.DateTime> issue_date, Nullable<System.DateTime> expiry_date, ObjectParameter error_message)
        {
            var licenseNumberParameter = licenseNumber != null ?
                new ObjectParameter("licenseNumber", licenseNumber) :
                new ObjectParameter("licenseNumber", typeof(string));
    
            var driver_idParameter = driver_id.HasValue ?
                new ObjectParameter("driver_id", driver_id) :
                new ObjectParameter("driver_id", typeof(int));
    
            var category_idParameter = category_id != null ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(string));
    
            var issue_dateParameter = issue_date.HasValue ?
                new ObjectParameter("issue_date", issue_date) :
                new ObjectParameter("issue_date", typeof(System.DateTime));
    
            var expiry_dateParameter = expiry_date.HasValue ?
                new ObjectParameter("expiry_date", expiry_date) :
                new ObjectParameter("expiry_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDriverLicense", licenseNumberParameter, driver_idParameter, category_idParameter, issue_dateParameter, expiry_dateParameter, error_message);
        }
    
        public virtual int AddVehicle(Nullable<int> driver_id, string series, Nullable<int> registraition_number, Nullable<int> region_code, string brand, string model, Nullable<int> year, ObjectParameter error_message)
        {
            var driver_idParameter = driver_id.HasValue ?
                new ObjectParameter("driver_id", driver_id) :
                new ObjectParameter("driver_id", typeof(int));
    
            var seriesParameter = series != null ?
                new ObjectParameter("series", series) :
                new ObjectParameter("series", typeof(string));
    
            var registraition_numberParameter = registraition_number.HasValue ?
                new ObjectParameter("registraition_number", registraition_number) :
                new ObjectParameter("registraition_number", typeof(int));
    
            var region_codeParameter = region_code.HasValue ?
                new ObjectParameter("region_code", region_code) :
                new ObjectParameter("region_code", typeof(int));
    
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddVehicle", driver_idParameter, seriesParameter, registraition_numberParameter, region_codeParameter, brandParameter, modelParameter, yearParameter, error_message);
        }
    
        public virtual int AddViolation(Nullable<int> driver_id, Nullable<int> vehicle_id, Nullable<int> violation_type_id, Nullable<System.DateTime> date_time, string place, Nullable<decimal> fine_amount, Nullable<int> payment_status_id, ObjectParameter error_message)
        {
            var driver_idParameter = driver_id.HasValue ?
                new ObjectParameter("driver_id", driver_id) :
                new ObjectParameter("driver_id", typeof(int));
    
            var vehicle_idParameter = vehicle_id.HasValue ?
                new ObjectParameter("vehicle_id", vehicle_id) :
                new ObjectParameter("vehicle_id", typeof(int));
    
            var violation_type_idParameter = violation_type_id.HasValue ?
                new ObjectParameter("violation_type_id", violation_type_id) :
                new ObjectParameter("violation_type_id", typeof(int));
    
            var date_timeParameter = date_time.HasValue ?
                new ObjectParameter("date_time", date_time) :
                new ObjectParameter("date_time", typeof(System.DateTime));
    
            var placeParameter = place != null ?
                new ObjectParameter("place", place) :
                new ObjectParameter("place", typeof(string));
    
            var fine_amountParameter = fine_amount.HasValue ?
                new ObjectParameter("fine_amount", fine_amount) :
                new ObjectParameter("fine_amount", typeof(decimal));
    
            var payment_status_idParameter = payment_status_id.HasValue ?
                new ObjectParameter("payment_status_id", payment_status_id) :
                new ObjectParameter("payment_status_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddViolation", driver_idParameter, vehicle_idParameter, violation_type_idParameter, date_timeParameter, placeParameter, fine_amountParameter, payment_status_idParameter, error_message);
        }
    
        public virtual int AddViolationType(Nullable<int> violation_type_id, string name, string description, ObjectParameter error_message)
        {
            var violation_type_idParameter = violation_type_id.HasValue ?
                new ObjectParameter("violation_type_id", violation_type_id) :
                new ObjectParameter("violation_type_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddViolationType", violation_type_idParameter, nameParameter, descriptionParameter, error_message);
        }
    
        public virtual int DeleteDriver(Nullable<int> driver_id, ObjectParameter error_message)
        {
            var driver_idParameter = driver_id.HasValue ?
                new ObjectParameter("driver_id", driver_id) :
                new ObjectParameter("driver_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDriver", driver_idParameter, error_message);
        }
    
        public virtual int DeleteDriverLicense(string license_Number, ObjectParameter error_message)
        {
            var license_NumberParameter = license_Number != null ?
                new ObjectParameter("license_Number", license_Number) :
                new ObjectParameter("license_Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDriverLicense", license_NumberParameter, error_message);
        }
    
        public virtual int DeleteVehicle(Nullable<int> vehicle_id, ObjectParameter error_message)
        {
            var vehicle_idParameter = vehicle_id.HasValue ?
                new ObjectParameter("vehicle_id", vehicle_id) :
                new ObjectParameter("vehicle_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVehicle", vehicle_idParameter, error_message);
        }
    
        public virtual int DeleteViolation(Nullable<int> violation_id, ObjectParameter error_message)
        {
            var violation_idParameter = violation_id.HasValue ?
                new ObjectParameter("violation_id", violation_id) :
                new ObjectParameter("violation_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteViolation", violation_idParameter, error_message);
        }
    
        public virtual int DeleteViolationType(Nullable<int> violation_type_id, ObjectParameter error_message)
        {
            var violation_type_idParameter = violation_type_id.HasValue ?
                new ObjectParameter("violation_type_id", violation_type_id) :
                new ObjectParameter("violation_type_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteViolationType", violation_type_idParameter, error_message);
        }
    
        public virtual ObjectResult<LicensesByDriver_Result> LicensesByDriver(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LicensesByDriver_Result>("LicensesByDriver", typeParameter);
        }
    
        public virtual int RecieveFineForViolation(Nullable<int> violation_id)
        {
            var violation_idParameter = violation_id.HasValue ?
                new ObjectParameter("violation_id", violation_id) :
                new ObjectParameter("violation_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecieveFineForViolation", violation_idParameter);
        }
    
        public virtual int UpdateDriver(Nullable<int> driver_id, string first_name, string last_name, string middle_name, Nullable<System.DateTime> birthdate, string phone, string address, ObjectParameter error_message)
        {
            var driver_idParameter = driver_id.HasValue ?
                new ObjectParameter("driver_id", driver_id) :
                new ObjectParameter("driver_id", typeof(int));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("birthdate", birthdate) :
                new ObjectParameter("birthdate", typeof(System.DateTime));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDriver", driver_idParameter, first_nameParameter, last_nameParameter, middle_nameParameter, birthdateParameter, phoneParameter, addressParameter, error_message);
        }
    
        public virtual int UpdateDriverLicense(string license_Number, string category_id, Nullable<System.DateTime> issue_date, Nullable<System.DateTime> expiry_date, Nullable<int> driver_id, ObjectParameter error_message)
        {
            var license_NumberParameter = license_Number != null ?
                new ObjectParameter("license_Number", license_Number) :
                new ObjectParameter("license_Number", typeof(string));
    
            var category_idParameter = category_id != null ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(string));
    
            var issue_dateParameter = issue_date.HasValue ?
                new ObjectParameter("issue_date", issue_date) :
                new ObjectParameter("issue_date", typeof(System.DateTime));
    
            var expiry_dateParameter = expiry_date.HasValue ?
                new ObjectParameter("expiry_date", expiry_date) :
                new ObjectParameter("expiry_date", typeof(System.DateTime));
    
            var driver_idParameter = driver_id.HasValue ?
                new ObjectParameter("driver_id", driver_id) :
                new ObjectParameter("driver_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDriverLicense", license_NumberParameter, category_idParameter, issue_dateParameter, expiry_dateParameter, driver_idParameter, error_message);
        }
    
        public virtual int UpdateVehicle(Nullable<int> vehicle_id, Nullable<int> driver_id, string series, Nullable<int> registraition_number, Nullable<int> region_code, string brand, string model, Nullable<int> year, ObjectParameter error_message)
        {
            var vehicle_idParameter = vehicle_id.HasValue ?
                new ObjectParameter("vehicle_id", vehicle_id) :
                new ObjectParameter("vehicle_id", typeof(int));
    
            var driver_idParameter = driver_id.HasValue ?
                new ObjectParameter("driver_id", driver_id) :
                new ObjectParameter("driver_id", typeof(int));
    
            var seriesParameter = series != null ?
                new ObjectParameter("series", series) :
                new ObjectParameter("series", typeof(string));
    
            var registraition_numberParameter = registraition_number.HasValue ?
                new ObjectParameter("registraition_number", registraition_number) :
                new ObjectParameter("registraition_number", typeof(int));
    
            var region_codeParameter = region_code.HasValue ?
                new ObjectParameter("region_code", region_code) :
                new ObjectParameter("region_code", typeof(int));
    
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVehicle", vehicle_idParameter, driver_idParameter, seriesParameter, registraition_numberParameter, region_codeParameter, brandParameter, modelParameter, yearParameter, error_message);
        }
    
        public virtual int UpdateViolation(Nullable<int> violation_id, Nullable<int> driver_id, Nullable<int> vehicle_id, Nullable<int> violation_type_id, Nullable<System.DateTime> date_time, string place, Nullable<decimal> fine_amount, Nullable<int> payment_status_id, ObjectParameter error_message)
        {
            var violation_idParameter = violation_id.HasValue ?
                new ObjectParameter("violation_id", violation_id) :
                new ObjectParameter("violation_id", typeof(int));
    
            var driver_idParameter = driver_id.HasValue ?
                new ObjectParameter("driver_id", driver_id) :
                new ObjectParameter("driver_id", typeof(int));
    
            var vehicle_idParameter = vehicle_id.HasValue ?
                new ObjectParameter("vehicle_id", vehicle_id) :
                new ObjectParameter("vehicle_id", typeof(int));
    
            var violation_type_idParameter = violation_type_id.HasValue ?
                new ObjectParameter("violation_type_id", violation_type_id) :
                new ObjectParameter("violation_type_id", typeof(int));
    
            var date_timeParameter = date_time.HasValue ?
                new ObjectParameter("date_time", date_time) :
                new ObjectParameter("date_time", typeof(System.DateTime));
    
            var placeParameter = place != null ?
                new ObjectParameter("place", place) :
                new ObjectParameter("place", typeof(string));
    
            var fine_amountParameter = fine_amount.HasValue ?
                new ObjectParameter("fine_amount", fine_amount) :
                new ObjectParameter("fine_amount", typeof(decimal));
    
            var payment_status_idParameter = payment_status_id.HasValue ?
                new ObjectParameter("payment_status_id", payment_status_id) :
                new ObjectParameter("payment_status_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateViolation", violation_idParameter, driver_idParameter, vehicle_idParameter, violation_type_idParameter, date_timeParameter, placeParameter, fine_amountParameter, payment_status_idParameter, error_message);
        }
    
        public virtual int UpdateViolationType(Nullable<int> violation_type_id, string name, string description, ObjectParameter error_message)
        {
            var violation_type_idParameter = violation_type_id.HasValue ?
                new ObjectParameter("violation_type_id", violation_type_id) :
                new ObjectParameter("violation_type_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateViolationType", violation_type_idParameter, nameParameter, descriptionParameter, error_message);
        }
    
        public virtual ObjectResult<VehiclesByDriver_Result> VehiclesByDriver(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehiclesByDriver_Result>("VehiclesByDriver", typeParameter);
        }
    
        public virtual ObjectResult<ViolationsByDriver_Result> ViolationsByDriver(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViolationsByDriver_Result>("ViolationsByDriver", typeParameter);
        }
    
        public virtual ObjectResult<ViolationsByType_Result> ViolationsByType(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViolationsByType_Result>("ViolationsByType", typeParameter);
        }
    
        public virtual ObjectResult<ViolationsByVehicle_Result> ViolationsByVehicle(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViolationsByVehicle_Result>("ViolationsByVehicle", typeParameter);
        }
    }
}
